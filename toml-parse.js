export const tomlParse={toJSON:function(t){let e={},l=t.split("\n"),r=e;for(let i of l)if(!(i=i.trim()).startsWith("#")&&""!==i){if(i.startsWith("[")&&i.endsWith("]")){let n=i.slice(1,-1).trim();r=tomlParse.getTable(e,n)}else{let o=i.indexOf("=");if(-1!==o){let s=i.slice(0,o).trim(),f=i.slice(o+1).trim();tomlParse.setKey(r,s,tomlParse.parseValue(f))}}}return e},fromJSON:function(t){let e="",l=function(t,r=""){for(let i in t)if(t.hasOwnProperty(i)){let n=t[i];"object"==typeof n&&null!==n?(e+=`${r}[${i}]
`,l(n,`${r}  `)):e+=`${r}${i} = ${tomlParse.toTomlValue(n)}
`}};return l(t),e},getTable:function(t,e){let l=e.split("."),r=t;for(let i of l)r.hasOwnProperty(i)||(r[i]={}),r=r[i];return r},setKey:function(t,e,l){"object"==typeof t&&null!==t&&(t[e]=l)},parseValue:function(t){return"true"===t||"false"!==t&&(/^-?\d*\.?\d+$/.test(t)?parseFloat(t):t)},toTomlValue:function(t){return"string"==typeof t?`"${t}"`:"boolean"==typeof t?t?"true":"false":"number"==typeof t?t.toString():t instanceof Date?t.toISOString():""},toCSS:function(t){let e="",l=t.split("\n"),r="";for(let i of l)if(!(i=i.trim()).startsWith("#")&&""!==i){if(i.startsWith("[")&&i.endsWith("]"))r=i.slice(1,-1).trim();else{let n=i.indexOf("=");if(-1!==n){let o=i.slice(0,n).trim(),s=i.slice(n+1).trim();e+=`${r} {
  ${o}: ${s};
}
`}}}return e},fromCSS:function(t){let e=[],l=/([^{]+)\s*{([^}]+)}/g,r;for(;null!==(r=l.exec(t));){let i=r[1].trim(),n=r[2].split(";"),o=i.split(",").map(t=>t.trim()).join("."),s={};for(let f of n){let[u,a]=f.split(":").map(t=>t.trim());u&&a&&(s[u]=a)}if(Object.keys(s).length>0){let m=`[${o}]`;for(let[p,c]of(e.push(m),Object.entries(s))){let h=`${p} = ${c}`;e.push(h)}}}return e.join("\n")}};export default tomlParse